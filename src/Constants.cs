namespace Dgmjr.DtoGenerator;

public partial class DtoGenerator
{
    private const string GenerateDtoAttributeName = "GenerateDtoAttribute";
    private const string GenerateDtoAttributeFilename = GenerateDtoAttributeName + ".g.cs";
    private static readonly string GenerateDtoAttributeDeclaration =
@$"/*
 *  <auto-generated>
 *     This file was generated by {ThisAssembly.Info.Title}.
 *     Any changes made directly to this file will be lost when the code is regenerated.
 * </auto-generated>
 *
 *  {GenerateDtoAttributeName}.cs
 *    Generated: {DateTimeOffset.Now:yyyy-MM-dd HH:mm:ss zzz}
 */
#nullable enable
[global::System.AttributeUsage(global::System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
[global::System.Diagnostics.Conditional(""CodeGeneration"")]
[global::System.CodeDom.Compiler.GeneratedCodeAttribute(""{ThisAssembly.Info.Title}"", ""{ThisAssembly.Info.FileVersion}"")]
internal sealed class GenerateDtoAttribute : global::System.Attribute
{{
    public GenerateDtoAttribute(DtoType dtoType = DtoType.Dto, DataStructureType dataStructureType = DataStructureType.RecordStruct, string? dtoTypeName = null, string? @namespace = null)
    {{
    }}
}}

[global::System.CodeDom.Compiler.GeneratedCodeAttribute(""{ThisAssembly.Info.Title}"", ""{ThisAssembly.Info.FileVersion}"")]
internal enum DtoType
{{
    Dto = 0,
    Insert = 1,
    Edit = 2
}}

[global::System.CodeDom.Compiler.GeneratedCodeAttribute(""{ThisAssembly.Info.Title}"", ""{ThisAssembly.Info.FileVersion}"")]
internal enum DataStructureType
{{
    RecordStruct = 0,
    RecordClass = 1,
    Class = 2,
    Struct = 3
}}
";
}
